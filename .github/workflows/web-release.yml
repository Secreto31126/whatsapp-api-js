name: Deploy websites update

on:
    workflow_dispatch:
        inputs:
            tag_name:
                description: "Tag to deploy"
                required: true
    workflow_call:
        inputs:
            tag_name:
                description: "Tag to deploy"
                required: true
                type: string

jobs:
    build:
        name: Build Documentation
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4

            - name: Setup
              run: npm ci

            - name: Document
              run: npm run document

            - name: Store docs
              uses: actions/upload-artifact@v4
              with:
                  name: docs
                  path: docs

    firebase:
        name: Deploy website to Firebase
        needs: build

        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - run: mkdir docs
            - name: Copy docs
              uses: actions/download-artifact@v5
              with:
                  name: docs
                  path: docs

            - uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  repoToken: "${{ secrets.GITHUB_TOKEN }}"
                  firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_WHATSAPPAPIJS }}"
                  channelId: live
                  projectId: whatsappapijs

    archive:
        name: Deploy website to Github Pages
        needs: build

        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4
              with:
                  ref: gh-pages

            - name: Check if tag exists
              run: |
                  if [ $(git tag -l "${{ inputs.tag_name }}") ]; then
                    echo "Tag doesn't exists"
                    exit 1
                  fi

            - name: Create Endpoint
              # The endpoint shouldn't exists
              # The code is only executed on releases
              run: mkdir ${{ inputs.tag_name }}

            - name: Copy docs into Endpoint
              uses: actions/download-artifact@v5
              with:
                  name: docs
                  path: ${{ inputs.tag_name }}

            - name: Add Endpoint to the index
              run: bash build.sh

            - name: Commit changes
              uses: EndBug/add-and-commit@v9
              with:
                  default_author: github_actor
                  message: Added ${{ inputs.tag_name }} docs
