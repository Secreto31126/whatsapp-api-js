{
  "version": 3,
  "sources": ["../../../src/messages/location.ts"],
  "sourcesContent": ["import { ClientMessage } from \"../types.js\";\n\n/**\n * Location API component\n *\n * @group Location\n */\nexport class Location extends ClientMessage {\n    /**\n     * The latitude of the location\n     */\n    readonly longitude: number;\n    /**\n     * The longitude of the location\n     */\n    readonly latitude: number;\n    /**\n     * The name of the location\n     */\n    readonly name?: string;\n    /**\n     * The address of the location\n     */\n    readonly address?: string;\n\n    /**\n     * @override\n     * @internal\n     */\n    get _type(): \"location\" {\n        return \"location\";\n    }\n\n    /**\n     * Create a Location object for the API\n     *\n     * @example\n     * ```ts\n     * import { Location } from \"whatsapp-api-js/messages\";\n     *\n     * const location_message = new Location(0, 0);\n     *\n     * const location_named_message = new Location(0, 0, \"My Store\", \"Address\");\n     * ```\n     *\n     * @param longitude - Longitude of the location\n     * @param latitude - Latitude of the location\n     * @param name - Name of the location\n     * @param address - Address of the location, only displayed if name is present\n     */\n    constructor(\n        longitude: number,\n        latitude: number,\n        name?: string,\n        address?: string\n    ) {\n        super();\n        this.longitude = longitude;\n        this.latitude = latitude;\n        if (name) this.name = name;\n        if (address) this.address = address;\n    }\n}\n"],
  "mappings": "wpBAAA,0IAA8B,uBAOvB,MAAM,iBAAiB,0BAAc,CAI/B,UAIA,SAIA,KAIA,QAMT,IAAI,OAAoB,CACpB,MAAO,UACX,CAmBA,YACI,UACA,SACA,KACA,QACF,CACE,MAAM,EACN,KAAK,UAAY,UACjB,KAAK,SAAW,SACZ,OAAM,KAAK,KAAO,MAClB,UAAS,KAAK,QAAU,QAChC,CACJ",
  "names": []
}
