{
  "version": 3,
  "sources": ["../../src/emitters.ts"],
  "sourcesContent": ["import type {\n    ClientMessage,\n    ClientMessageRequest,\n    ServerMessage,\n    ServerMessageResponse,\n    ServerConversation,\n    ServerPricing,\n    ServerError,\n    PostData\n} from \"./types\";\nimport type { WhatsAppAPI } from \"./index\";\n\n/**\n * Callback for \"sent\" event\n *\n * @public\n * @param args - The arguments object\n */\nexport type OnSent = (args: OnSentArgs) => unknown;\n\n/**\n * @public\n */\nexport type OnSentArgs = {\n    /**\n     * The bot's phoneID from where the message was sent\n     */\n    phoneID: string;\n    /**\n     * The user's phone number\n     */\n    to: string;\n    /**\n     * The message type\n     */\n    type: string;\n    /**\n     * The message object\n     */\n    message: ClientMessage;\n    /**\n     * The object sent to the server\n     */\n    request: ClientMessageRequest;\n    /**\n     * The message id, undefined if parsed is set to false\n     */\n    id?: string;\n    /**\n     * The parsed response from the server, undefined if parsed is set to false\n     */\n    response?: ServerMessageResponse;\n};\n\n/**\n * Callback for \"message\" event\n *\n * @public\n * @param args - The arguments object\n */\nexport type OnMessage = (args: OnMessageArgs) => unknown;\n\n/**\n * @public\n */\nexport type OnMessageArgs = {\n    /**\n     * The bot's phoneID\n     */\n    phoneID: string;\n    /**\n     * The user's phone number\n     */\n    from: string;\n    /**\n     * The messages object\n     */\n    message: ServerMessage;\n    /**\n     * The username\n     */\n    name?: string;\n    /**\n     * The raw data from the API\n     */\n    raw: PostData;\n    /**\n     * A method to easily reply to the user who sent the message\n     *\n     * @param response - The message to send as a reply\n     * @param context - Wether to mention the current message, defaults to false\n     * @param biz_opaque_callback_data - An arbitrary 512B string, useful for tracking\n     * @returns WhatsAppAPI.sendMessage return value\n     */\n    reply: (\n        response: ClientMessage,\n        context?: boolean,\n        biz_opaque_callback_data?: string\n    ) => Promise<ServerMessageResponse | Response>;\n    /**\n     * The WhatsAppAPI instance that emitted the event\n     */\n    Whatsapp: InstanceType<typeof WhatsAppAPI>;\n};\n\n/**\n * Callback for \"status\" event\n *\n * @public\n * @param args - The arguments object\n */\nexport type OnStatus = (args: OnStatusArgs) => unknown;\n\n/**\n * @public\n */\nexport type OnStatusArgs = {\n    /**\n     * The bot's phoneID\n     */\n    phoneID: string;\n    /**\n     * The user's phone number\n     */\n    phone: string;\n    /**\n     * The message status\n     */\n    status: string;\n    /**\n     * The message ID\n     */\n    id: string;\n    /**\n     * The conversation object\n     */\n    conversation?: ServerConversation;\n    /**\n     * The pricing object\n     */\n    pricing?: ServerPricing;\n    /**\n     * The error object\n     */\n    error?: ServerError;\n    /**\n     * Arbitrary string included in sent messages\n     */\n    biz_opaque_callback_data?: string;\n    /**\n     * The raw data from the API\n     */\n    raw: PostData;\n};\n"],
  "mappings": "sjBAAA",
  "names": []
}
