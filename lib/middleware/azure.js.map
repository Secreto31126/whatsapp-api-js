{
  "version": 3,
  "sources": ["../../src/middleware/azure.ts"],
  "sourcesContent": ["import { WhatsAppAPIMiddleware } from \"./globals.js\";\nimport { WhatsAppAPIError } from \"../errors.js\";\n\nimport type { HttpRequest } from \"@azure/functions\";\nimport type { GetParams } from \"../types.d.ts\";\n\n/**\n * Azure Function middleware for WhatsAppAPI\n *\n * @remark This middleware is identical to the Web Standard API middleware,\n * but uses the Azure Function's HttpRequest object which is a _subset_\n * of the Web Standard API's Request object.\n */\nexport class WhatsAppAPI extends WhatsAppAPIMiddleware {\n    /**\n     * POST request handler for Azure Function\n     *\n     * @example\n     * ```ts\n     * import { app } from \"@azure/functions\";\n     * import { WhatsAppAPI } from \"whatsapp-api-js/middleware/azure\";\n     *\n     * const Whatsapp = new WhatsAppAPI({\n     *     token: \"YOUR_TOKEN\",\n     *     appSecret: \"YOUR_APP_SECRET\",\n     *     webhookVerifyToken: \"YOUR_WEBHOOK_VERIFY_TOKEN\"\n     * });\n     *\n     * app.http('WhatsAppPOST', {\n     *     methods: ['POST'],\n     *     authLevel: 'anonymous',\n     *     route: 'message',\n     *     handler: async (req) => ({\n     *         status: await Whatsapp.handle_post(req)\n     *     })\n     * });\n     * ```\n     *\n     * @override\n     * @param req - The request object from Azure Functions\n     * @returns The status code to be sent to the client\n     */\n    async handle_post(req: HttpRequest): Promise<number> {\n        try {\n            const body = await req.text();\n\n            await this.post(\n                JSON.parse(body || \"{}\"),\n                body,\n                req.headers.get(\"x-hub-signature-256\") ?? \"\"\n            );\n\n            return 200;\n        } catch (e) {\n            // In case the JSON.parse fails \u00AF\\_(\u30C4)_/\u00AF\n            return e instanceof WhatsAppAPIError ? e.httpStatus : 500;\n        }\n    }\n\n    /**\n     * GET request handler for Azure Function\n     *\n     * @example\n     * ```ts\n     * import { app } from \"@azure/functions\";\n     * import { WhatsAppAPI } from \"whatsapp-api-js/middleware/azure\";\n     *\n     * const Whatsapp = new WhatsAppAPI({\n     *     token: \"YOUR_TOKEN\",\n     *     appSecret: \"YOUR_APP_SECRET\",\n     *     webhookVerifyToken: \"YOUR_WEBHOOK_VERIFY_TOKEN\"\n     * });\n     *\n     * app.http('WhatsAppGET', {\n     *     methods: ['GET'],\n     *     authLevel: 'anonymous',\n     *     route: 'message',\n     *     handler: async (req) => {\n     *         try {\n     *             return {\n     *                 body: Whatsapp.handle_get(req)\n     *             };\n     *         } catch (e) {\n     *             return {\n     *                 status: e as number\n     *             };\n     *         }\n     *     }\n     * });\n     * ```\n     *\n     * @override\n     * @param req - The request object from Azure Functions\n     * @returns The challenge string to be sent to the client\n     * @throws The error code\n     */\n    handle_get(req: HttpRequest): string {\n        try {\n            return this.get(\n                Object.fromEntries(new URL(req.url).searchParams) as GetParams\n            );\n        } catch (e) {\n            // In case who knows what fails \u00AF\\_(\u30C4)_/\u00AF\n            throw e instanceof WhatsAppAPIError ? e.httpStatus : 500;\n        }\n    }\n}\n"],
  "mappings": "AAAA,SAAS,6BAA6B;AACtC,SAAS,wBAAwB;AAY1B,MAAM,oBAAoB,sBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA6BnD,MAAM,YAAY,KAAmC;AACjD,QAAI;AACA,YAAM,OAAO,MAAM,IAAI,KAAK;AAE5B,YAAM,KAAK;AAAA,QACP,KAAK,MAAM,QAAQ,IAAI;AAAA,QACvB;AAAA,QACA,IAAI,QAAQ,IAAI,qBAAqB,KAAK;AAAA,MAC9C;AAEA,aAAO;AAAA,IACX,SAAS,GAAG;AAER,aAAO,aAAa,mBAAmB,EAAE,aAAa;AAAA,IAC1D;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuCA,WAAW,KAA0B;AACjC,QAAI;AACA,aAAO,KAAK;AAAA,QACR,OAAO,YAAY,IAAI,IAAI,IAAI,GAAG,EAAE,YAAY;AAAA,MACpD;AAAA,IACJ,SAAS,GAAG;AAER,YAAM,aAAa,mBAAmB,EAAE,aAAa;AAAA,IACzD;AAAA,EACJ;AACJ;",
  "names": []
}
