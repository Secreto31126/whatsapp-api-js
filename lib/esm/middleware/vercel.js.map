{
  "version": 3,
  "sources": ["../../../src/middleware/vercel.ts"],
  "sourcesContent": ["import { WhatsAppAPI as NodeHTTPMiddleware } from \"./node-http.js\";\nimport { isInteger } from \"../utils.js\";\n\nimport type { VercelRequest } from \"@vercel/node\";\nimport type { GetParams } from \"../types.js\";\n\n/**\n * Vercel serverless functions middleware for WhatsAppAPI (Node/Next.js)\n */\nexport class WhatsAppAPI extends NodeHTTPMiddleware {\n    /**\n     * POST request handler for Vercel serverless functions\n     *\n     * @remarks This method expects the request body to be the original string, not a parsed body\n     * @see https://vercel.com/guides/how-do-i-get-the-raw-body-of-a-serverless-function\n     *\n     * @example\n     * ```ts\n     * import type { VercelRequest, VercelResponse } from \"@vercel/node\";\n     * import { WhatsAppAPI } from \"whatsapp-api-js/middleware/vercel\";\n     *\n     * const Whatsapp = new WhatsAppAPI({\n     *     token: \"YOUR_TOKEN\",\n     *     appSecret: \"YOUR_APP_SECRET\",\n     *     webhookVerifyToken: \"YOUR_WEBHOOK_VERIFY_TOKEN\"\n     * });\n     *\n     * // The `bodyParser: false` is required for the middleware to work\n     * export const config = {\n     *     api: {\n     *        bodyParser: false\n     *     }\n     * };\n     *\n     * export default async (req: VercelRequest, res: VercelResponse) => {\n     *     if (req.method === \"POST\") {\n     *         res.status(await Whatsapp.handle_post(req));\n     *         res.end();\n     *     }\n     * };\n     * ```\n     *\n     * @param req - The request object\n     * @returns The status code to be sent to the client\n     */\n    handle_post(req: VercelRequest) {\n        return super.handle_post(req);\n    }\n\n    /**\n     * GET request handler for Vercel serverless functions\n     *\n     * @example\n     * ```ts\n     * import type { VercelRequest, VercelResponse } from \"@vercel/node\";\n     * import { WhatsAppAPI } from \"whatsapp-api-js/middleware/vercel\";\n     *\n     * const Whatsapp = new WhatsAppAPI({\n     *     token: \"YOUR_TOKEN\",\n     *     appSecret: \"YOUR_APP_SECRET\",\n     *     webhookVerifyToken: \"YOUR_WEBHOOK_VERIFY_TOKEN\"\n     * });\n     *\n     * export default (req: VercelRequest, res: VercelResponse) => {\n     *     if (req.method === \"GET\") {\n     *         try {\n     *             res.end(Whatsapp.handle_get(req));\n     *             res.status(200);\n     *         } catch (e) {\n     *             res.status(e as number).end();\n     *         }\n     *     }\n     * };\n     * ```\n     *\n     * @override\n     * @param req - The request object\n     * @returns The challenge string to be sent to the client\n     * @throws The error code\n     */\n    handle_get(req: VercelRequest) {\n        try {\n            return this.get(req.query as GetParams);\n        } catch (e) {\n            // In case who knows what fails \u00AF\\_(\u30C4)_/\u00AF\n            throw isInteger(e) ? e : 500;\n        }\n    }\n}\n"],
  "mappings": "AAAA,OAAS,eAAe,uBAA0B,iBAClD,OAAS,cAAiB,cAQnB,MAAM,oBAAoB,kBAAmB,CAoChD,YAAY,IAAoB,CAC5B,OAAO,MAAM,YAAY,GAAG,CAChC,CAiCA,WAAW,IAAoB,CAC3B,GAAI,CACA,OAAO,KAAK,IAAI,IAAI,KAAkB,CAC1C,OAAS,EAAG,CAER,MAAM,UAAU,CAAC,EAAI,EAAI,GAC7B,CACJ,CACJ",
  "names": []
}
