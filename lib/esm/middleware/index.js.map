{
  "version": 3,
  "sources": ["../../../src/middleware/index.ts"],
  "sourcesContent": ["// This file is a stud for the documentation.\n// You shouldn't import it as it might execute code for different frameworks.\n\n/**\n * @module middleware\n *\n * @description\n * Simplify the setup proccess of WhatsAppAPI for different frameworks.\n *\n * @example\n * ```ts\n * import { WhatsAppAPI } from \"whatsapp-api-js/middleware/deno\";\n *\n * const Whatsapp = new WhatsAppAPI({\n *     token: \"YOUR_TOKEN\",\n *     appSecret: \"YOUR_APP_SECRET\"\n * });\n *\n * Deno.serve(async (req) => {\n *     if (req.method === \"POST\") {\n *         const status = await Whatsapp.handle_post(req);\n *         return new Response(null, { status });\n *     } else if (req.method === \"GET\") {\n *         const challenge = Whatsapp.handle_get(req);\n *         return new Response(challenge);\n *     }\n * });\n * ```\n *\n * @see {@link WhatsAppAPIMiddleware.handle_post}\n * @see {@link WhatsAppAPIMiddleware.handle_get}\n */\n\nexport { WhatsAppAPIMiddleware } from \"./globals.js\";\nexport { WhatsAppAPI as ExpressMiddleware } from \"./express.js\";\nexport { WhatsAppAPI as AdonisMiddleware } from \"./adonis.js\";\nexport { WhatsAppAPI as VercelMiddleware } from \"./vercel.js\";\nexport { WhatsAppAPI as DenoMiddleware } from \"./deno.js\";\nexport { WhatsAppAPI as BunMiddleware } from \"./bun.js\";\nexport { WhatsAppAPI as SvelteKitMiddleware } from \"./sveltekit.js\";\nexport { WhatsAppAPI as WebStandardMiddleware } from \"./web-standard.js\";\nexport { WhatsAppAPI as NodeHTTPMiddleware } from \"./node-http.js\";\n"],
  "mappings": "AAiCA,OAAS,0BAA6B,eACtC,OAAwB,gBAAyB,eACjD,OAAwB,eAAfA,iBAAuC,cAChD,OAAwB,eAAfA,iBAAuC,cAChD,OAAwB,eAAfA,iBAAqC,YAC9C,OAAwB,eAAfA,iBAAoC,WAC7C,OAAwB,eAAfA,iBAA0C,iBACnD,OAAwB,eAAfA,iBAA4C,oBACrD,OAAwB,eAAfA,iBAAyC",
  "names": ["WhatsAppAPI"]
}
