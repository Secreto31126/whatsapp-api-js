{
  "version": 3,
  "sources": ["../../../src/messages/media.ts"],
  "sourcesContent": ["import { ClientMessage } from \"../types.js\";\n\n/**\n * Abstract class for all the media types\n *\n * @group Media\n */\nexport abstract class Media extends ClientMessage {\n    /**\n     * The id of the media\n     */\n    readonly id?: string;\n    /**\n     * The link of the media\n     */\n    readonly link?: string;\n\n    /**\n     * @param file - File to be sent\n     * @param isItAnID - If the file is an ID (true) or an URL (false)\n     */\n    constructor(file: string, isItAnID = false) {\n        super();\n        this[isItAnID ? \"id\" : \"link\"] = file;\n    }\n}\n\n/**\n * Audio API component\n *\n * @group Media\n */\nexport class Audio extends Media {\n    /**\n     * @override\n     * @internal\n     */\n    get _type(): \"audio\" {\n        return \"audio\";\n    }\n\n    /**\n     * Create an Audio object for the API\n     *\n     * @example\n     * ```ts\n     * import { Audio } from \"whatsapp-api-js/messages\";\n     *\n     * const audio_message = new Audio(\"https://www.example.com/audio.mp3\");\n     *\n     * const audio_id_message = new Audio(\"12345678\", true);\n     * ```\n     *\n     * @param audio - The audio file's link or id\n     * @param isItAnID - Whether audio is an id (true) or a link (false)\n     */\n    constructor(audio: string, isItAnID = false) {\n        super(audio, isItAnID);\n    }\n}\n\n/**\n * Document API component\n *\n * @group Media\n */\nexport class Document extends Media {\n    /**\n     * The file's caption\n     */\n    readonly caption?: string;\n    /**\n     * The file's filename\n     */\n    readonly filename?: string;\n\n    /**\n     * @override\n     * @internal\n     */\n    get _type(): \"document\" {\n        return \"document\";\n    }\n\n    /**\n     * Create a Document object for the API\n     *\n     * @example\n     * ```ts\n     * import { Document } from \"whatsapp-api-js/messages\";\n     *\n     * const document_message = new Document(\"https://www.example.com/document.pdf\");\n     *\n     * const document_id_message = new Document(\"12345678\", true);\n     *\n     * const document_caption_message = new Document(\n     *     \"https://www.example.com/document.pdf\",\n     *     false,\n     *     \"Hello world!\"\n     * );\n     *\n     * const document_filename_message = new Document(\n     *     \"https://www.example.com/document.pdf\",\n     *     false,\n     *     undefined,\n     *     \"a weird filename.pdf\"\n     * );\n     * ```\n     *\n     * @param document - The document file's link or id\n     * @param isItAnID - Whether document is an id (true) or a link (false)\n     * @param caption - Describes the specified document media\n     * @param filename - Describes the filename for the specific document\n     */\n    constructor(\n        document: string,\n        isItAnID = false,\n        caption?: string,\n        filename?: string\n    ) {\n        super(document, isItAnID);\n        if (caption) this.caption = caption;\n        if (filename) this.filename = filename;\n    }\n}\n\n/**\n * Image API component\n *\n * @group Media\n */\nexport class Image extends Media {\n    /**\n     * The file's caption\n     */\n    readonly caption?: string;\n\n    /**\n     * @override\n     * @internal\n     */\n    get _type(): \"image\" {\n        return \"image\";\n    }\n\n    /**\n     * Create a Image object for the API\n     *\n     * @example\n     * ```ts\n     * import { Image } from \"whatsapp-api-js/messages\";\n     *\n     * const image_message = new Image(\"https://i.imgur.com/4QfKuz1.png\");\n     *\n     * const image_id_message = new Image(\"12345678\", true);\n     *\n     * const image_caption_message = new Image(\n     *     \"https://i.imgur.com/4QfKuz1.png\",\n     *     false,\n     *     \"Hello world!\"\n     * );\n     * ```\n     *\n     * @param image - The image file's link or id\n     * @param isItAnID - Whether image is an id (true) or a link (false)\n     * @param caption - Describes the specified image media\n     */\n    constructor(image: string, isItAnID = false, caption?: string) {\n        super(image, isItAnID);\n        if (caption) this.caption = caption;\n    }\n}\n\n/**\n * Sticker API component\n *\n * @group Media\n */\nexport class Sticker extends Media {\n    /**\n     * @override\n     * @internal\n     */\n    get _type(): \"sticker\" {\n        return \"sticker\";\n    }\n\n    /**\n     * Create a Sticker object for the API\n     *\n     * @example\n     * ```ts\n     * import { Sticker } from \"whatsapp-api-js/messages\";\n     *\n     * const sticker_message = new Sticker(\"https://www.example.com/sticker.webp\");\n     *\n     * const sticker_id_message = new Sticker(\"12345678\", true);\n     * ```\n     *\n     * @param sticker - The sticker file's link\n     * @param isItAnID - Whether sticker is an id (true) or a link (false)\n     */\n    constructor(sticker: string, isItAnID = false) {\n        super(sticker, isItAnID);\n    }\n}\n\n/**\n * Video API component\n *\n * @group Media\n */\nexport class Video extends Media {\n    /**\n     * The file's caption\n     */\n    readonly caption?: string;\n\n    /**\n     * @override\n     * @internal\n     */\n    get _type(): \"video\" {\n        return \"video\";\n    }\n\n    /**\n     * Create a Video object for the API\n     *\n     * @example\n     * ```ts\n     * import { Video } from \"whatsapp-api-js/messages\";\n     *\n     * const video_message = new Video(\"https://www.example.com/video.mp4\");\n     *\n     * const video_id_message = new Video(\"12345678\", true);\n     *\n     * const video_caption_message = new Video(\n     *     \"https://www.example.com/video.mp4\",\n     *     false,\n     *     \"Hello world!\"\n     * );\n     * ```\n     *\n     * @param video - The video file's link\n     * @param isItAnID - Whether video is an id (true) or a link (false)\n     * @param caption - Describes the specified video media\n     */\n    constructor(video: string, isItAnID = false, caption?: string) {\n        super(video, isItAnID);\n        if (caption) this.caption = caption;\n    }\n}\n"],
  "mappings": "AAAA,OAAS,kBAAqB,cAOvB,MAAe,cAAc,aAAc,CAIrC,GAIA,KAMT,YAAY,KAAc,SAAW,GAAO,CACxC,MAAM,EACN,KAAK,SAAW,KAAO,MAAM,EAAI,IACrC,CACJ,CAOO,MAAM,cAAc,KAAM,CAK7B,IAAI,OAAiB,CACjB,MAAO,OACX,CAiBA,YAAY,MAAe,SAAW,GAAO,CACzC,MAAM,MAAO,QAAQ,CACzB,CACJ,CAOO,MAAM,iBAAiB,KAAM,CAIvB,QAIA,SAMT,IAAI,OAAoB,CACpB,MAAO,UACX,CAgCA,YACI,SACA,SAAW,GACX,QACA,SACF,CACE,MAAM,SAAU,QAAQ,EACpB,UAAS,KAAK,QAAU,SACxB,WAAU,KAAK,SAAW,SAClC,CACJ,CAOO,MAAM,cAAc,KAAM,CAIpB,QAMT,IAAI,OAAiB,CACjB,MAAO,OACX,CAwBA,YAAY,MAAe,SAAW,GAAO,QAAkB,CAC3D,MAAM,MAAO,QAAQ,EACjB,UAAS,KAAK,QAAU,QAChC,CACJ,CAOO,MAAM,gBAAgB,KAAM,CAK/B,IAAI,OAAmB,CACnB,MAAO,SACX,CAiBA,YAAY,QAAiB,SAAW,GAAO,CAC3C,MAAM,QAAS,QAAQ,CAC3B,CACJ,CAOO,MAAM,cAAc,KAAM,CAIpB,QAMT,IAAI,OAAiB,CACjB,MAAO,OACX,CAwBA,YAAY,MAAe,SAAW,GAAO,QAAkB,CAC3D,MAAM,MAAO,QAAQ,EACjB,UAAS,KAAK,QAAU,QAChC,CACJ",
  "names": []
}
